// Copyright (c) 2005-2023 Code Synthesis.
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis gives permission
// to link this program with the Xerces-C++ library (or with modified
// versions of Xerces-C++ that use the same license as Xerces-C++), and
// distribute linked combinations including the two. You must obey the GNU
// General Public License version 2 in all respects for all of the code
// used other than Xerces-C++. If you modify this copy of the program, you
// may extend this exception to your version of the program, but you are
// not obligated to do so. If you do not wish to do so, delete this
// exception statement from your version.
//
// Furthermore, Code Synthesis makes a special exception for the Free/Libre
// and Open Source Software (FLOSS) which is described in the accompanying
// FLOSSE file.
//

#ifndef UDDF_3_2_3_FWD_HXX
#define UDDF_3_2_3_FWD_HXX

#ifndef XSD_CXX11
#define XSD_CXX11
#endif

#ifndef XSD_USE_CHAR
#define XSD_USE_CHAR
#endif

#ifndef XSD_CXX_TREE_USE_CHAR
#define XSD_CXX_TREE_USE_CHAR
#endif

// Begin prologue.
//
//
// End prologue.

#include <xsd/cxx/version.hxx>

#if (LIBXSD_VERSION != 400002000000000L)
#error XSD runtime version mismatch
#endif

#include <xsd/cxx/pre.hxx>

#include <xsd/cxx/xml/char-utf8.hxx>

#include <xsd/cxx/tree/exceptions.hxx>
#include <xsd/cxx/tree/elements.hxx>
#include <xsd/cxx/tree/types.hxx>

#include <xsd/cxx/xml/error-handler.hxx>

#include <xsd/cxx/xml/dom/auto-ptr.hxx>

#include <xsd/cxx/tree/parsing.hxx>
#include <xsd/cxx/tree/parsing/byte.hxx>
#include <xsd/cxx/tree/parsing/unsigned-byte.hxx>
#include <xsd/cxx/tree/parsing/short.hxx>
#include <xsd/cxx/tree/parsing/unsigned-short.hxx>
#include <xsd/cxx/tree/parsing/int.hxx>
#include <xsd/cxx/tree/parsing/unsigned-int.hxx>
#include <xsd/cxx/tree/parsing/long.hxx>
#include <xsd/cxx/tree/parsing/unsigned-long.hxx>
#include <xsd/cxx/tree/parsing/boolean.hxx>
#include <xsd/cxx/tree/parsing/float.hxx>
#include <xsd/cxx/tree/parsing/double.hxx>
#include <xsd/cxx/tree/parsing/decimal.hxx>

#include <xsd/cxx/tree/std-ostream-operators.hxx>

namespace xml_schema
{
  // anyType and anySimpleType.
  //
  typedef ::xsd::cxx::tree::type type;
  typedef ::xsd::cxx::tree::simple_type< char, type > simple_type;
  typedef ::xsd::cxx::tree::type container;

  // 8-bit
  //
  typedef signed char byte;
  typedef unsigned char unsigned_byte;

  // 16-bit
  //
  typedef short short_;
  typedef unsigned short unsigned_short;

  // 32-bit
  //
  typedef int int_;
  typedef unsigned int unsigned_int;

  // 64-bit
  //
  typedef long long long_;
  typedef unsigned long long unsigned_long;

  // Supposed to be arbitrary-length integral types.
  //
  typedef long long integer;
  typedef long long non_positive_integer;
  typedef unsigned long long non_negative_integer;
  typedef unsigned long long positive_integer;
  typedef long long negative_integer;

  // Boolean.
  //
  typedef bool boolean;

  // Floating-point types.
  //
  typedef float float_;
  typedef double double_;
  typedef double decimal;

  // String types.
  //
  typedef ::xsd::cxx::tree::string< char, simple_type > string;
  typedef ::xsd::cxx::tree::normalized_string< char, string > normalized_string;
  typedef ::xsd::cxx::tree::token< char, normalized_string > token;
  typedef ::xsd::cxx::tree::name< char, token > name;
  typedef ::xsd::cxx::tree::nmtoken< char, token > nmtoken;
  typedef ::xsd::cxx::tree::nmtokens< char, simple_type, nmtoken > nmtokens;
  typedef ::xsd::cxx::tree::ncname< char, name > ncname;
  typedef ::xsd::cxx::tree::language< char, token > language;

  // ID/IDREF.
  //
  typedef ::xsd::cxx::tree::id< char, ncname > id;
  typedef ::xsd::cxx::tree::idref< char, ncname, type > idref;
  typedef ::xsd::cxx::tree::idrefs< char, simple_type, idref > idrefs;

  // URI.
  //
  typedef ::xsd::cxx::tree::uri< char, simple_type > uri;

  // Qualified name.
  //
  typedef ::xsd::cxx::tree::qname< char, simple_type, uri, ncname > qname;

  // Binary.
  //
  typedef ::xsd::cxx::tree::buffer< char > buffer;
  typedef ::xsd::cxx::tree::base64_binary< char, simple_type > base64_binary;
  typedef ::xsd::cxx::tree::hex_binary< char, simple_type > hex_binary;

  // Date/time.
  //
  typedef ::xsd::cxx::tree::time_zone time_zone;
  typedef ::xsd::cxx::tree::date< char, simple_type > date;
  typedef ::xsd::cxx::tree::date_time< char, simple_type > date_time;
  typedef ::xsd::cxx::tree::duration< char, simple_type > duration;
  typedef ::xsd::cxx::tree::gday< char, simple_type > gday;
  typedef ::xsd::cxx::tree::gmonth< char, simple_type > gmonth;
  typedef ::xsd::cxx::tree::gmonth_day< char, simple_type > gmonth_day;
  typedef ::xsd::cxx::tree::gyear< char, simple_type > gyear;
  typedef ::xsd::cxx::tree::gyear_month< char, simple_type > gyear_month;
  typedef ::xsd::cxx::tree::time< char, simple_type > time;

  // Entity.
  //
  typedef ::xsd::cxx::tree::entity< char, ncname > entity;
  typedef ::xsd::cxx::tree::entities< char, simple_type, entity > entities;

  typedef ::xsd::cxx::tree::content_order content_order;
  // Flags and properties.
  //
  typedef ::xsd::cxx::tree::flags flags;
  typedef ::xsd::cxx::tree::properties< char > properties;

  // Parsing/serialization diagnostics.
  //
  typedef ::xsd::cxx::tree::severity severity;
  typedef ::xsd::cxx::tree::error< char > error;
  typedef ::xsd::cxx::tree::diagnostics< char > diagnostics;

  // Exceptions.
  //
  typedef ::xsd::cxx::tree::exception< char > exception;
  typedef ::xsd::cxx::tree::bounds< char > bounds;
  typedef ::xsd::cxx::tree::duplicate_id< char > duplicate_id;
  typedef ::xsd::cxx::tree::parsing< char > parsing;
  typedef ::xsd::cxx::tree::expected_element< char > expected_element;
  typedef ::xsd::cxx::tree::unexpected_element< char > unexpected_element;
  typedef ::xsd::cxx::tree::expected_attribute< char > expected_attribute;
  typedef ::xsd::cxx::tree::unexpected_enumerator< char > unexpected_enumerator;
  typedef ::xsd::cxx::tree::expected_text_content< char > expected_text_content;
  typedef ::xsd::cxx::tree::no_prefix_mapping< char > no_prefix_mapping;

  // Error handler callback interface.
  //
  typedef ::xsd::cxx::xml::error_handler< char > error_handler;

  // DOM interaction.
  //
  namespace dom
  {
    // Automatic pointer for DOMDocument.
    //
    using ::xsd::cxx::xml::dom::unique_ptr;

#ifndef XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
#define XSD_CXX_TREE_TREE_NODE_KEY__XML_SCHEMA
    // DOM user data key for back pointers to tree nodes.
    //
    const XMLCh* const tree_node_key = ::xsd::cxx::tree::user_data_keys::node;
#endif
  }
}

#include "ID-fwd.hxx"

#include "IDREF-fwd.hxx"

#include "ID_TYPE-fwd.hxx"

#include "markerType-fwd.hxx"

#include "namedType-fwd.hxx"

#include "simpleNamedType-fwd.hxx"

#include "addressType-fwd.hxx"

#include "contactType-fwd.hxx"

#include "encapsulatedDateTimeType-fwd.hxx"

#include "notesType-fwd.hxx"

#include "linkType-fwd.hxx"

#include "priceType-fwd.hxx"

#include "priceperdivepackageType-fwd.hxx"

#include "ratingType-fwd.hxx"

#include "ratingvalueType-fwd.hxx"

#include "mediaType-fwd.hxx"

#include "imageType-fwd.hxx"

#include "personType-fwd.hxx"

#include "sexType-fwd.hxx"

#include "personalType-fwd.hxx"

#include "individualType-fwd.hxx"

#include "examinationType-fwd.hxx"

#include "certificationType-fwd.hxx"

#include "instructorType-fwd.hxx"

#include "permitType-fwd.hxx"

#include "insuranceType-fwd.hxx"

#include "equipmentType-fwd.hxx"

#include "equipmentconfigurationType-fwd.hxx"

#include "manufacturerType-fwd.hxx"

#include "equipmentPieceType-fwd.hxx"

#include "suitType-fwd.hxx"

#include "tankType-fwd.hxx"

#include "tankmaterialType-fwd.hxx"

#include "cameraType-fwd.hxx"

#include "videocameraType-fwd.hxx"

#include "purchaseType-fwd.hxx"

#include "shopType-fwd.hxx"

#include "divebaseType-fwd.hxx"

#include "guideType-fwd.hxx"

#include "siteType-fwd.hxx"

#include "geographyType-fwd.hxx"

#include "sitedataType-fwd.hxx"

#include "wreckType-fwd.hxx"

#include "builtType-fwd.hxx"

#include "dimensionType-fwd.hxx"

#include "placeType-fwd.hxx"

#include "caveType-fwd.hxx"

#include "indoorType-fwd.hxx"

#include "ecologyType-fwd.hxx"

#include "floraType-fwd.hxx"

#include "faunaType-fwd.hxx"

#include "invertebrataType-fwd.hxx"

#include "vertebrataType-fwd.hxx"

#include "singleLifeFormType-fwd.hxx"

#include "speciesType-fwd.hxx"

#include "globallightintensityType-fwd.hxx"

#include "lightintensityType-fwd.hxx"

#include "mixType-fwd.hxx"

#include "repetitiongroupType-fwd.hxx"

#include "diveType-fwd.hxx"

#include "informationbeforediveType-fwd.hxx"

#include "informationafterdiveType-fwd.hxx"

#include "surfaceintervalType-fwd.hxx"

#include "wayaltitudeType-fwd.hxx"

#include "exposuretoaltitudeType-fwd.hxx"

#include "tankdataType-fwd.hxx"

#include "waypointType-fwd.hxx"

#include "alarmType-fwd.hxx"

#include "drugType-fwd.hxx"

#include "applicationdataType-fwd.hxx"

#include "observationsType-fwd.hxx"

#include "outputType-fwd.hxx"

#include "inputprofileType-fwd.hxx"

#include "baseCalculationType-fwd.hxx"

#include "mixchangeType-fwd.hxx"

#include "tableType-fwd.hxx"

#include "tablescopeType-fwd.hxx"

#include "bottomtimetableType-fwd.hxx"

#include "bottomtimetablescopeType-fwd.hxx"

#include "tripType-fwd.hxx"

#include "trippartType-fwd.hxx"

#include "accommodationType-fwd.hxx"

#include "vesselType-fwd.hxx"

#include "operatorType-fwd.hxx"

#include "setdcdataType-fwd.hxx"

#include "dcgasdefinitionsdataType-fwd.hxx"

#include "dcendndtalarmType-fwd.hxx"

#include "dcdivepo2alarmType-fwd.hxx"

#include "dcdivesitedataType-fwd.hxx"

#include "dcbuddydataType-fwd.hxx"

#include "dcdivedepthalarmType-fwd.hxx"

#include "dcdivetimealarmType-fwd.hxx"

#include "dcalarmtimeType-fwd.hxx"

#include "dcalarmWithTimeType-fwd.hxx"

#include "dcalarmWithDepthType-fwd.hxx"

#include "dcdecomodelType-fwd.hxx"

#include "dcalarmType-fwd.hxx"

#include "getdcdataType-fwd.hxx"

#include "divecomputerdumpType-fwd.hxx"

#include "buehlmannType-fwd.hxx"

#include "rgbmType-fwd.hxx"

#include "vpmType-fwd.hxx"

#include "tissueType-fwd.hxx"

#include "samplesType-fwd.hxx"

#include "rebreatherType-fwd.hxx"

#include "divemodeType-fwd.hxx"

#include "uddf-fwd.hxx"

#include "currency-fwd.hxx"

#include "generator-fwd.hxx"

#include "mediadata-fwd.hxx"

#include "imagedata-fwd.hxx"

#include "maker-fwd.hxx"

#include "business-fwd.hxx"

#include "diver-fwd.hxx"

#include "medical-fwd.hxx"

#include "education-fwd.hxx"

#include "divepermissions-fwd.hxx"

#include "diveinsurances-fwd.hxx"

#include "membership-fwd.hxx"

#include "smoking-fwd.hxx"

#include "numberofdives-fwd.hxx"

#include "examinationresult-fwd.hxx"

#include "suittype1-fwd.hxx"

#include "divesite-fwd.hxx"

#include "environment-fwd.hxx"

#include "abundance-fwd.hxx"

#include "lifestage-fwd.hxx"

#include "dominance-fwd.hxx"

#include "gasdefinitions-fwd.hxx"

#include "profiledata-fwd.hxx"

#include "equipmentused-fwd.hxx"

#include "apparatus-fwd.hxx"

#include "platform-fwd.hxx"

#include "purpose-fwd.hxx"

#include "stateofrestbeforedive-fwd.hxx"

#include "alcoholbeforedive-fwd.hxx"

#include "medicalbeforedive-fwd.hxx"

#include "nosuit-fwd.hxx"

#include "current-fwd.hxx"

#include "diveplan-fwd.hxx"

#include "equipmentmalfunction-fwd.hxx"

#include "problems-fwd.hxx"

#include "program-fwd.hxx"

#include "thermalcomfort-fwd.hxx"

#include "workload-fwd.hxx"

#include "anysymptoms-fwd.hxx"

#include "divetable-fwd.hxx"

#include "globalalarmsgiven-fwd.hxx"

#include "infinity-fwd.hxx"

#include "transportation-fwd.hxx"

#include "alarm-fwd.hxx"

#include "batterychargecondition-fwd.hxx"

#include "decostop-fwd.hxx"

#include "setpo2-fwd.hxx"

#include "tankpressure-fwd.hxx"

#include "divemode-fwd.hxx"

#include "gradientfactor-fwd.hxx"

#include "measuredpo2-fwd.hxx"

#include "periodicallytaken-fwd.hxx"

#include "decotrainer-fwd.hxx"

#include "hargikas-fwd.hxx"

#include "heinrichsweikamp-fwd.hxx"

#include "tausim-fwd.hxx"

#include "tautabu-fwd.hxx"

#include "tablegeneration-fwd.hxx"

#include "ascent-fwd.hxx"

#include "descent-fwd.hxx"

#include "divetrip-fwd.hxx"

#include "dateoftrip-fwd.hxx"

#include "relateddives-fwd.hxx"

#include "divecomputercontrol-fwd.hxx"

#include "acknowledge-fwd.hxx"

#include "gas-fwd.hxx"

#include "decomodel-fwd.hxx"

#include "type-fwd.hxx"

#include "meteringmethod-fwd.hxx"

#include "buddy-fwd.hxx"

#include "quality-fwd.hxx"

#include "occurence-fwd.hxx"

#include "globalalarm-fwd.hxx"

#include "kind-fwd.hxx"

#include "setby-fwd.hxx"

#include "calculateprofile-fwd.hxx"

#include "calculatetable-fwd.hxx"

#include "calculatebottomtimetable-fwd.hxx"

// Forward declarations.
//
namespace streit
{
}


#include <xsd/cxx/post.hxx>

// Begin epilogue.
//
//
// End epilogue.

#endif // UDDF_3_2_3_FWD_HXX
